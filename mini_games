import random

def suspicious_mage_riddle():
  """"""
  answer = input("What has hands but can’t clap?").strip().lower()
  if answer == "clock":
      print("Indeed! You receive Dark-Dweller and a shortcut that will teleport you closer to the abandoned campsite is revealed!")
  else:
      print("Incorrect. Try again another time.")


def tablet_puzzle(helped_gale, battles_fought):
  """"""
    riddles = [
        ("I speak without a mouth and hear without ears. I come alive with wind. What am I?", "echo"),
        ("What has keys but can’t open locks?", "piano"),
        ("The more of me you take, the more you leave behind. What am I?", "footsteps")
    ]

    print("The tablet shimmers and ancient runes appear:")

    for question, answer in riddles:
      print(f'Riddle: "{question}"')
      player_answer = input("Your answer: ").strip().lower()

      if player_answer == answer:
          if helped_gale and battles_fought >= 100:
              print("The tablet glows brightly. You receive Great Warrior’s Valor!")
          else:
              print("A faint hum echoes from the tablet. You receive Donta 2048.")
          break
      else:
          print("Incorrect. Another ancient rune appears!")


def frostfault_puzzle():
  """Puzzle to arrange Greek letters in ascending order to awaken Frostfault."""
  greek_letters = {chr(num) for num in range(945, 950)}
  shuffled = list(greek_letters)
  random.shuffle(shuffled)

  print("Ancient Greek letters glow within the summoning circle:")
  print("Arrange them in ascending order.")
  print("Current order:", ' '.join(shuffled))

  moves = 0
  sorted_letters = sorted(greek_letters)

  while shuffled != sorted_letters:
      try:
          player_order = input("Enter positions for full new order (5 numbers, space-separated): ").split()
          if len(player_order) != 5:
              print("Enter exactly 5 positions.")
              continue

          positions = [int(x)-1 for x in player_order]
          if set(positions) != set(range(5)):
              print("Invalid positions. Use each number 1 to 5 exactly once.")
              continue

          shuffled = [shuffled[pos] for pos in positions]
          moves += 1
          print("Current order:", ' '.join(shuffled))

      except (ValueError, IndexError):
          print("Please enter five valid numbers (1-5).")

  print(f"The circle ignites after {moves} moves — Frostfault awakens!")
  frostfault_battle()

def frostfault_battle():
  choice = input("Do you spare Frostfault after battle: ").strip().lower()
  if choice == "yes":
      print("Frostfault bows and grants you the key and Beast’s Final Hour!")
  else:
      print("You slay Frostfault and take the key forcefully.")


